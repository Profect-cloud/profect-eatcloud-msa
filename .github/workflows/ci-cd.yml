name: ci-cd-compose

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  IMAGE_REPO: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/profect-eatcloud-msa

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Assert Docker Hub secrets
        run: |
          test -n "${{ secrets.DOCKERHUB_USERNAME }}" || (echo "❌ DOCKERHUB_USERNAME missing" && exit 1)
          test -n "${{ secrets.DOCKERHUB_TOKEN }}"    || (echo "❌ DOCKERHUB_TOKEN missing" && exit 1)

      - name: Derive image tag (git sha)
        id: meta
        run: echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_REPO }}:${{ steps.meta.outputs.sha }}
            ${{ env.IMAGE_REPO }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: SSH to EC2 & deploy via Compose
        uses: appleboy/ssh-action@v1.2.0
        env:
          IMAGE_REPO: ${{ env.IMAGE_REPO }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            cd ${{ secrets.APP_DIR }}

            # Private 레포면 필요(공개여도 무해)
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            IMAGE_PATH="${IMAGE_REPO}:${{ needs.build-and-push.outputs.image_tag }}"

            if grep -q '^APP_IMAGE=' .env; then
              sed -i "s#^APP_IMAGE=.*#APP_IMAGE=${IMAGE_PATH}#g" .env
            else
              echo "APP_IMAGE=${IMAGE_PATH}" >> .env
            fi

            docker compose pull
            docker compose up -d --remove-orphans

      - name: Smoke test
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            for i in {1..10}; do
              curl -fsS http://localhost/actuator/health && exit 0
              sleep 3
            done
            echo "Health check failed"; exit 1
